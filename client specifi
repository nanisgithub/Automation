{% test client_specific_checks(model) %}

    {% set healthplan = var('healthplan') %}
    {% set processid = var('processid', 'NA') %}
    {% set config_data = fromyaml(load_file('models/validations/Client_Specific_Rules.yml')) %}
    {% set client_rules = config_data['client_specific_rules'] | selectattr('HealthPlan', 'equalto', healthplan) | list %}

    {% if client_rules | length == 0 %}
        {{ exceptions.raise_compiler_error("No rules configured for HealthPlan: " ~ healthplan) }}
    {% endif %}

    {% set rule_set = client_rules[0]['Tests'] %}
    {% set result_queries = [] %}

    {% for rule in rule_set %}
        {% if rule['type'] == 'duplicate_check' %}
            {% set cols = rule['columns'] %}
            {% set test_name = rule.get('test_name', 'DuplicateCheck') %}
            {% set threshold = rule.get('threshold', 5) %}

            {% set query %}
                select
                    '{{ model.name }}' as SourceTable,
                    '{{ healthplan }}' as HealthPlan,
                    '{{ processid }}' as ProcessID,
                    '{{ test_name }}' as RuleName,
                    'Duplicate Check' as RuleCategory,
                    '{{ cols | join(', ') }}' as RuleColumn,
                    count(*) as FailedCount,
                    count(*) over () as TotalCount,
                    current_timestamp as RunTime
                from {{ model }}
                where HealthPlan = '{{ healthplan }}'
                group by {{ cols | join(', ') }}
                having count(*) > 1
            {% endset %}

            {% do result_queries.append(query) %}
        {% endif %}
    {% endfor %}

    {% set final_sql = result_queries | join(' union all ') %}

    {{ return(final_sql) }}

{% endtest %}