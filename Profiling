{% macro profile_columns(model, columns) %}
    {% set results = [] %}
    {% for col in columns %}
        {% set q %}
            SELECT
                '{{ col }}' AS column_name,
                COUNT(*) AS total_count,
                COUNT(*) - COUNT({{ col }}) AS null_count,
                CASE WHEN COUNT(*) = 0 THEN 0 ELSE CAST(COUNT(*) - COUNT({{ col }}) AS FLOAT) / COUNT(*) * 100 END AS null_pct,
                COUNT(DISTINCT {{ col }}) AS distinct_count,
                MIN({{ col }}) AS min_value,
                MAX({{ col }}) AS max_value
            FROM {{ model }}
        {% endset %}
        {% do results.append(q) %}
    {% endfor %}
    {{ results | join(" UNION ALL\n") }}
{% endmacro %}


{% macro log_profile_to_summary(model, columns, test_name) %}
{% for col in columns %}
    {% call statement('log_profile_' ~ col, fetch_result=False) %}
        DECLARE @total_count INT, @null_count INT, @null_pct FLOAT, @distinct_count INT, @min_val NVARCHAR(100), @max_val NVARCHAR(100);

        SELECT
            @total_count = COUNT(*),
            @null_count = COUNT(*) - COUNT({{ col }}),
            @null_pct = CASE WHEN COUNT(*) = 0 THEN 0 ELSE CAST(COUNT(*) - COUNT({{ col }}) AS FLOAT) / COUNT(*) * 100 END,
            @distinct_count = COUNT(DISTINCT {{ col }}),
            @min_val = CAST(MIN({{ col }}) AS NVARCHAR),
            @max_val = CAST(MAX({{ col }}) AS NVARCHAR)
        FROM {{ model }};

        DELETE FROM NonDelegatedClaims.dbo.ndc_validation_summary_log
        WHERE health_plan = '{{ var("healthplan") }}'
          AND process_id = '{{ var("processid") }}'
          AND test_name = '{{ test_name }}_{{ col }}';

        INSERT INTO NonDelegatedClaims.dbo.ndc_validation_summary_log
        (model_name, test_name, rule_category, total_count, error_count, threshold, error_percentage, result_status, execution_time, health_plan, process_id, min_value, max_value)
        VALUES
        ('{{ model.name }}', '{{ test_name }}_{{ col }}', 'column_profile',
         @total_count, @null_count, 0, @null_pct,
         CASE WHEN @null_pct > 0 THEN 'WARN' ELSE 'PASS' END,
         GETDATE(), '{{ var("healthplan") }}', '{{ var("processid") }}', @min_val, @max_val);



    {% endcall %}
{% endfor %}
{% endmacro %}





{{ config(
    materialized='table',
    schema='profiling',
    alias='ndc_combined_profile_results'
) }}

-- Run and store full profiling metrics
WITH profile_data AS (
    {{ profile_columns(
        ref('NDC_FileValidation_SourceData'),
        var('profiling_columns')
    ) }}
)

SELECT
    '{{ var("healthplan") }}' AS health_plan,
    '{{ var("processid") }}' AS process_id,
    CURRENT_TIMESTAMP AS profiled_at,
    *
FROM profile_data;

-- Also log key results into summary log table
{{ log_profile_to_summary(
    ref('NDC_FileValidation_SourceData'),
    var('profiling_columns'),
    'ColumnProfile'
) }}

