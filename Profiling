-- MACRO: log_profile_to_summary (unchanged, used for logging only)
{% macro log_profile_to_summary(model, columns, test_name) %}
{% for col in columns %}
    {% call statement('log_profile_' ~ col, fetch_result=False) %}
        DECLARE @total_count INT, @null_count INT, @null_pct FLOAT, @distinct_count INT, @min_val NVARCHAR(100), @max_val NVARCHAR(100);

        SELECT
            @total_count = COUNT(*),
            @null_count = COUNT(*) - COUNT({{ col }}),
            @null_pct = CASE WHEN COUNT(*) = 0 THEN 0 ELSE CAST(COUNT(*) - COUNT({{ col }}) AS FLOAT) / COUNT(*) * 100 END,
            @distinct_count = COUNT(DISTINCT {{ col }}),
            @min_val = CAST(MIN({{ col }}) AS NVARCHAR),
            @max_val = CAST(MAX({{ col }}) AS NVARCHAR)
        FROM {{ model }};

        DELETE FROM NonDelegatedClaims.dbo.ndc_validation_summary_log
        WHERE health_plan = '{{ var("healthplan") }}'
          AND process_id = '{{ var("processid") }}'
          AND test_name = '{{ test_name }}_{{ col }}';

        INSERT INTO NonDelegatedClaims.dbo.ndc_validation_summary_log
        (model_name, test_name, rule_category, total_count, error_count, threshold, error_percentage, result_status, execution_time, health_plan, process_id, min_value, max_value)
        VALUES
        ('{{ model.name }}', '{{ test_name }}_{{ col }}', 'column_profile',
         @total_count, @null_count, 0, @null_pct,
         CASE WHEN @null_pct > 0 THEN 'WARN' ELSE 'PASS' END,
         GETDATE(), '{{ var("healthplan") }}', '{{ var("processid") }}', @min_val, @max_val);
    {% endcall %}
{% endfor %}
{% endmacro %}




-- ============================================================================
-- Model: ndc_profile_summary_log.sql
--
-- Purpose:
--   This model exists solely to trigger the log_profile_to_summary macro,
--   which logs profiling statistics into the ndc_validation_summary_log table.
--
-- Note:
--   This model does not materialize any table or view. It only executes logic.
--   Setting `materialized='ephemeral'` tells dbt not to persist anything.
-- ============================================================================

{{ config(
    materialized='ephemeral'
) }}

{{ log_profile_to_summary(
    ref('NDC_FileValidation_SourceData'),
    var('profiling_columns'),
    'ColumnProfile'
) }}




## ðŸ“‚ Folder Structure Overview

This project follows a clean and modular layout for profiling and rule-based validation in DBT.

```plaintext
NDC_Data_Validation/
â”‚
â”œâ”€â”€ macros/
â”‚   â”œâ”€â”€ validations/                     # Macros for rule-based checks (null, expressions, conditions)
â”‚   â””â”€â”€ profiling/                       # Macros for profiling metrics and logging
â”‚
â”œâ”€â”€ models/
â”‚   â”œâ”€â”€ staging/                         # Source-layer models
â”‚   â”‚   â””â”€â”€ NDC_FileValidation_SourceData.sql

â”‚   â”œâ”€â”€ validations/                     # YAML file for DBT tests (rule-based)
â”‚   â”‚   â””â”€â”€ NDC_RuleCheck.yml

â”‚   â”œâ”€â”€ profiling/                       # YAML + ephemeral model to run column profiling
â”‚   â”‚   â”œâ”€â”€ NDC_ProfilingCheck.yml       # vars: list of profiling columns
â”‚   â”‚   â””â”€â”€ ndc_profile_summary_log.sql  # triggers macro, logs stats to summary log

â”‚   â””â”€â”€ reference_datasets/              # Any lookup tables (e.g., ICD codes)
â”‚       â””â”€â”€ reference_icd_codes.sql